'''
Problem 2: Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
'''

import time


def fibonacci_even_gen(num):
    a, b = 1, 2
    while True:
        a, b = b, a + b
        if a >= num:
            break

        if a % 2 == 0:
            yield a

def get_sum_of_even(num):
    even_list = [x for x in fibonacci_even_gen(num)]
    return sum(even_list)


if __name__ == '__main__':
    start_time = time.time()
    print(get_sum_of_even(4000000))  # 4613732
    print("--- %s seconds ---" % (time.time() - start_time))